@page "/blogs"
@page "/blogs/tags/{TagId}"
@inject BlogManager BlogManager
@inject IWebHostEnvironment HostEnvironment

<main class="main-content py-8">
    <h1 class="text-center">Blog Posts</h1>

    <ul class="tags-container mt-5">
        <li><NavLink href="/blogs" class="text-main" Match="NavLinkMatch.All">All Tags</NavLink></li>           
        @foreach (var blogTag in BlogManager.GetTags())
        {
            <li><NavLink href="@($"/blogs/tags/{blogTag.Id}")" class="text-main" Match="NavLinkMatch.All">@blogTag.Name</NavLink></li>           
        }
    </ul>
    
    <div class="blogs-container mt-5">
        @foreach (var post in posts)
        {
            <article class="blog-post-item">
                <a href="/blogs/@post.Info.Id">
                    <h2 class="h5 text-main">
                        @post.Info.Title
                        
                        @if (post.Info.Draft)
                        {
                            <div class="chip bg-light ml-2">draft</div>
                        }
                    </h2>
                </a>
                <a href="/blogs/@post.Info.Id">
                    <p class="text-main">@post.Info.Description</p>
                </a>
                
                <div class="d-flex gap-2 mt-auto">
                    @foreach (var blogTag in post.Tags)
                    {
                        <a href="/blogs/tags/@blogTag.Id" class="chip chip-primary text-main">@blogTag.Name</a>
                    }
                </div>
                <a href="/blogs/@post.Info.Id" class="text-uppercase text-dark text-small">
                    <p>@post.Info.ReadTimeMinutes minute read</p>
                    <p><time datetime="@post.Info.Published.ToString("yyy-MM-dd")">@post.Info.Published.ToString("MMMM dd, yyy")</time> | @(post.Authors.FirstOrDefault()?.Name ?? "Unknown")</p>
                </a>
            </article>
        }
    </div>
</main>

@code {
    [Parameter]
    public string? TagId { get; set; }

    private IEnumerable<BlogPost> posts = [];

    protected override void OnParametersSet()
    {
        if (TagId is null)
            posts = BlogManager.GetBlogPosts(includeDrafts: HostEnvironment.IsDevelopment());
        else
            posts = BlogManager.GetBlogPostsByTags([TagId], includeDrafts: HostEnvironment.IsDevelopment());
    }
}